{"version":3,"sources":["redux/actions/actionTypes.js","redux/actions/index.js","components/AddTodo.js","components/TodoList.js","redux/selector.js","components/TodoFilters.js","TodoApp.js","redux/reducers/todos.js","redux/reducers/showFilter.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["ADD_TODO","TOGGLE_TODO","DELETE_TODO","DELETE_COMPLETED_TODO","SET_FILTER","todoId","addTodo","content","type","payload","id","setFilter","selectedFilter","filter","AddTodo","useState","value","setValue","dispatch","useDispatch","handleAddClick","e","trimmedValue","trim","key","Modal","error","title","okText","style","flexFlow","placeholder","allowClear","size","bordered","onChange","target","maxWidth","onPressEnter","icon","PlusOutlined","onClick","TodoList","todos","useSelector","state","showFilter","todo","completed","getTodosByFilter","orientation","length","fontSize","dataSource","renderItem","Item","textDecoration","actions","shape","CheckOutlined","DeleteOutlined","danger","ghost","TodoFilters","currentFilter","margin","justify","UnorderedListOutlined","SmileOutlined","FrownOutlined","Header","Layout","Content","TodoApp","minHeight","color","textAlign","padding","minWidth","ReloadOutlined","marginTop","initialState","TodosReducer","action","map","combineReducers","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.248d6e7c.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\";\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\nexport const DELETE_TODO = \"DELETE_TODO\";\nexport const DELETE_COMPLETED_TODO = 'DELETE_COMPLETED_TODO'\n\nexport const SET_FILTER = \"SET_FILTER\";\n","import { ADD_TODO, TOGGLE_TODO, DELETE_TODO, DELETE_COMPLETED_TODO, SET_FILTER } from \"./actionTypes\";\n\nlet todoId = 0\n\nexport const addTodo = content => {\n  return {\n    type: ADD_TODO,\n    payload: {\n      id: todoId++,\n      content\n    }\n  }\n}\n\nexport const toggleTodo = id => {\n  return {\n    type: TOGGLE_TODO,\n    payload: {\n      id\n    }\n  }\n}\nexport const deleteTodo = id => ({\n  type: DELETE_TODO,\n  payload: { id }\n})\n\nexport const deleteCompletedTodo = () => ({\n  type: DELETE_COMPLETED_TODO\n})\n\nexport const setFilter = selectedFilter => (\n  {\n    type: SET_FILTER,\n    payload: {\n      filter: selectedFilter\n    }\n  }\n);","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Input, Button, Row, Modal } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\nimport { addTodo } from '../redux/actions'\n\nconst AddTodo = () => {\n  const [value, setValue] = useState('')\n  //const [isModalShow, setIsModalShow] = useState(false)\n  const dispatch = useDispatch()\n\n  const handleInputChange = (e) => {\n    setValue(e.target.value)\n  }\n\n  const errorAlert = () => {\n    Modal.error({\n      title: '請輸入 todo 名稱',\n      okText: '知道了！'\n    });\n  }\n  const handleAddClick = (e) => {\n    const trimmedValue = value.trim()\n    if (!trimmedValue) {\n      return errorAlert()\n    }\n\n    if (e.key === 'Enter') {\n      dispatch(addTodo(trimmedValue))\n      return setValue('')\n    }\n\n    dispatch(addTodo(trimmedValue))\n    setValue('')\n  }\n  return (\n    <Row style={{ flexFlow: \"nowrap\" }}>\n      <Input\n        placeholder=\"請輸入 TODO 名稱\"\n        allowClear\n        size=\"large\"\n        bordered\n        value={value}\n        onChange={handleInputChange}\n        style={{ maxWidth: \"600px\" }}\n        onPressEnter={e => handleAddClick(e)}\n      />\n      <Button\n        type=\"primary\"\n        icon={<PlusOutlined />}\n        size=\"large\"\n        onClick={handleAddClick}\n      >\n        Add\n      </Button>\n      {/*<Modal title=\"Basic Modal\"\n        visible={isModalShow}\n        //onOk={() => setIsModalShow(false)}\n        onCancel={() => setIsModalShow(false)}>\n        <p>Some contents...</p>\n        <p>Some contents...</p>\n        <p>Some contents...</p>\n      </Modal>*/}\n    </Row>\n  )\n}\n\nexport default AddTodo","import { useSelector, useDispatch } from 'react-redux';\nimport { List, Divider, Tooltip, Button } from 'antd';\nimport { CheckOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { toggleTodo, deleteTodo } from '../redux/actions'\nimport { getTodosByFilter } from '../redux/selector'\n\nconst TodoList = () => {\n  const todos = useSelector(state => getTodosByFilter(state))\n  const dispatch = useDispatch()\n\n  return (\n    <>\n      <Divider orientation=\"left\">TodoList</Divider>\n      {todos && todos.length ? (\n        <List\n          size=\"large\"\n          bordered\n\n          style={{ fontSize: '1rem' }}\n          dataSource={todos}\n          renderItem={todo => (\n            < List.Item\n              style={todo.completed ? { textDecoration: 'line-through' } : {}}\n              actions={[\n                <Tooltip title=\"completed\">\n                  <Button\n                    type=\"ghost\"\n                    shape=\"circle\"\n                    icon={<CheckOutlined />}\n                    size=\"middle\"\n                    onClick={() => dispatch(toggleTodo(todo.id))}\n                  />\n                </Tooltip>,\n                <Tooltip title=\"delete\">\n                  <Button\n                    type=\"ghost\"\n                    shape=\"circle\"\n                    icon={<DeleteOutlined />}\n                    size=\"middle\"\n                    danger={true}\n                    ghost={true}\n                    onClick={() => dispatch(deleteTodo(todo.id))}\n                  />\n                </Tooltip>,\n              ]}\n            >{todo.content}</List.Item>\n          )}\n        />\n      ) : <div>No todo yet !</div>}\n\n    </>\n  )\n}\n\n\nexport default TodoList","\nexport const getTodosState = store => store.todos\n\nexport const getTodosByFilter = (state) => {\n  const selectedFilter = state.showFilter\n  const { todos } = state.todos\n  switch (selectedFilter) {\n    case '已完成':\n      return todos.filter(todo => todo.completed)\n    case '未完成':\n      return todos.filter(todo => !todo.completed)\n    case 'all':\n    default:\n      return todos\n  }\n}\n\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Row, Button } from 'antd';\nimport { SmileOutlined, UnorderedListOutlined, FrownOutlined } from '@ant-design/icons';\n\nimport { setFilter } from '../redux/actions'\nconst TodoFilters = () => {\n  const currentFilter = useSelector(state => state.showFilter)\n  const dispatch = useDispatch()\n  return (\n    <Row style={{ margin: \"30px\" }} justify=\"space-around\">\n      <Button\n        icon={<UnorderedListOutlined />}\n        type=\"primary\"\n        size=\"large\"\n        ghost={currentFilter !== 'all'}\n        onClick={() => dispatch(setFilter('all'))}\n      >All</Button>\n      <Button\n        icon={<SmileOutlined />}\n        type=\"primary\"\n        size=\"large\"\n        ghost={currentFilter !== '已完成'}\n        onClick={() => dispatch(setFilter('已完成'))}\n\n      >已完成</Button>\n      <Button\n        icon={<FrownOutlined />}\n        type=\"danger\"\n        size=\"large\"\n        ghost={currentFilter !== '未完成'}\n        onClick={() => dispatch(setFilter('未完成'))}\n      >未完成</Button>\n    </Row>\n  )\n}\n\nexport default TodoFilters\n\n//<ReloadOutlined />","import { useSelector, useDispatch } from 'react-redux';\n\nimport 'antd/dist/antd.css'\nimport { Layout, Button } from 'antd';\nimport { ReloadOutlined } from '@ant-design/icons';\nimport AddTodo from './components/AddTodo';\nimport TodoList from './components/TodoList';\nimport TodoFilters from './components/TodoFilters';\nimport { deleteCompletedTodo } from './redux/actions';\n\nconst { Header, Content } = Layout;\n\nfunction TodoApp() {\n  const { todos } = useSelector(state => state.todos)\n  const dispatch = useDispatch()\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      <Header style={{ color: \"#fff\", fontSize: \"20px\" }}>\n        Use React, Redux, and Antd Design build Todo APP\n      </Header>\n      <Content style={{ textAlign: \"center\", padding: \"30px\", margin: \"0 auto\", minWidth: \"70vw\" }}>\n        <AddTodo />\n        <TodoFilters />\n        <TodoList />\n        {todos.length ? (\n          <Button\n            icon={<ReloadOutlined />}\n            type=\"primary\"\n            size=\"large\"\n            ghost\n            style={{ marginTop: \"60px\" }}\n            onClick={() => dispatch(deleteCompletedTodo())}\n          >\n            Clean Completed\n          </Button>\n        ) : ''}\n\n      </Content>\n\n    </Layout>\n  );\n}\n\nexport default TodoApp;\n","import { ADD_TODO, TOGGLE_TODO, DELETE_TODO, DELETE_COMPLETED_TODO } from '../actions/actionTypes'\n\nconst initialState = {\n  todos: []\n}\n\nconst TodosReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TODO: {\n      const { id, content } = action.payload\n      return {\n        todos: [...state.todos,\n        {\n          id,\n          content,\n          completed: false\n        }\n        ],\n      }\n    }\n    case TOGGLE_TODO: {\n      const { id } = action.payload\n      return {\n        todos: state.todos.map(todo => {\n          if (todo.id !== id) {\n            return todo\n          }\n          return {\n            ...todo,\n            completed: !todo.completed\n          }\n        })\n      }\n    }\n    case DELETE_TODO: {\n      const { id } = action.payload\n      return {\n        todos: state.todos.filter(todo => todo.id !== id)\n      }\n    }\n\n    case DELETE_COMPLETED_TODO: {\n      return {\n        todos: state.todos.filter(todo => !todo.completed)\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\nexport default TodosReducer","import { SET_FILTER } from \"../actions/actionTypes\";\n\nconst showFilter = (state = 'all', action) => {\n  switch (action.type) {\n    case SET_FILTER:\n      return action.payload.filter\n    default:\n      return state\n  }\n}\n\nexport default showFilter","import { combineReducers } from \"redux\";\nimport todos from './todos'\nimport showFilter from './showFilter'\n\nexport default combineReducers({\n  todos,\n  showFilter\n})","import { createStore } from 'redux'\nimport rootReducer from './reducers'\n\nexport default createStore(rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoApp from './TodoApp';\n\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <TodoApp />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}