{"version":3,"sources":["redux/actions/actionTypes.js","redux/actions/index.js","components/AddTodo.js","components/TodoItem.js","components/TodoList.js","components/TodoFilters.js","TodoApp.js","redux/reducers/todos.js","redux/reducers/showFilter.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["ADD_TODO","TOGGLE_TODO","DELETE_TODO","DELETE_COMPLETED_TODO","SET_FILTER","todoId","addTodo","content","type","payload","id","setFilter","selectedFilter","filter","AddTodo","useState","value","setValue","dispatch","useDispatch","handleAddClick","e","trimmedValue","trim","key","Modal","error","title","okText","style","flexFlow","placeholder","allowClear","size","bordered","onChange","target","maxWidth","onPressEnter","icon","PlusOutlined","onClick","TodoItem","todo","useSelector","state","todos","find","selectTodoById","Item","completed","textDecoration","actions","shape","CheckOutlined","DeleteOutlined","danger","ghost","selectTodoIds","map","TodoList","todoIds","shallowEqual","orientation","length","fontSize","dataSource","TodoFilters","currentFilter","showFilter","margin","justify","UnorderedListOutlined","SmileOutlined","FrownOutlined","Header","Layout","Content","TodoApp","minHeight","color","textAlign","padding","minWidth","ReloadOutlined","marginTop","initialState","TodosReducer","action","combineReducers","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.886b7a4e.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\";\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\nexport const DELETE_TODO = \"DELETE_TODO\";\nexport const DELETE_COMPLETED_TODO = 'DELETE_COMPLETED_TODO'\n\nexport const SET_FILTER = \"SET_FILTER\";\n","import { ADD_TODO, TOGGLE_TODO, DELETE_TODO, DELETE_COMPLETED_TODO, SET_FILTER } from \"./actionTypes\";\n\nlet todoId = 0\n\nexport const addTodo = content => {\n  return {\n    type: ADD_TODO,\n    payload: {\n      id: todoId++,\n      content\n    }\n  }\n}\n\nexport const toggleTodo = id => {\n  return {\n    type: TOGGLE_TODO,\n    payload: {\n      id\n    }\n  }\n}\nexport const deleteTodo = id => ({\n  type: DELETE_TODO,\n  payload: { id }\n})\n\nexport const deleteCompletedTodo = () => ({\n  type: DELETE_COMPLETED_TODO\n})\n\nexport const setFilter = selectedFilter => (\n  {\n    type: SET_FILTER,\n    payload: {\n      filter: selectedFilter\n    }\n  }\n);","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Input, Button, Row, Modal } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\nimport { addTodo } from '../redux/actions'\n\nconst AddTodo = () => {\n  const [value, setValue] = useState('')\n  const dispatch = useDispatch()\n\n  const handleInputChange = (e) => {\n    setValue(e.target.value)\n  }\n\n  const errorAlert = () => {\n    Modal.error({\n      title: '請輸入 todo 名稱',\n      okText: '知道了！'\n    });\n  }\n  const handleAddClick = (e) => {\n    const trimmedValue = value.trim()\n    if (!trimmedValue) {\n      return errorAlert()\n    }\n\n    if (e.key === 'Enter') {\n      dispatch(addTodo(trimmedValue))\n      return setValue('')\n    }\n\n    dispatch(addTodo(trimmedValue))\n    setValue('')\n  }\n  return (\n    <Row style={{ flexFlow: \"nowrap\" }}>\n      <Input\n        placeholder=\"請輸入 TODO 名稱\"\n        allowClear\n        size=\"large\"\n        bordered\n        value={value}\n        onChange={handleInputChange}\n        style={{ maxWidth: \"600px\" }}\n        onPressEnter={e => handleAddClick(e)}\n      />\n      <Button\n        type=\"primary\"\n        icon={<PlusOutlined />}\n        size=\"large\"\n        onClick={handleAddClick}\n      >\n        Add\n      </Button>\n    </Row>\n  )\n}\n\nexport default AddTodo","import { useSelector, useDispatch } from 'react-redux'\nimport { List, Tooltip, Button } from 'antd';\nimport { CheckOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { toggleTodo, deleteTodo } from '../redux/actions'\n\nconst selectTodoById = (state, todoId) => {\n  return state.todos.find(todo => todo.id === todoId)\n}\n\nconst TodoItem = ({ todoId }) => {\n\n  const todo = useSelector(state => selectTodoById(state.todos, todoId))\n  const dispatch = useDispatch()\n\n  return (\n    < List.Item\n      style={todo.completed ? { textDecoration: 'line-through' } : {}}\n      actions={[\n        <Tooltip title=\"completed\">\n          <Button\n            type={todo.completed ? \"primary\" : \"ghost\"}\n            shape=\"circle\"\n            icon={<CheckOutlined />}\n            size=\"middle\"\n            onClick={() => dispatch(toggleTodo(todo.id))}\n          />\n        </Tooltip>,\n        <Tooltip title=\"delete\">\n          <Button\n            type=\"ghost\"\n            shape=\"circle\"\n            icon={<DeleteOutlined />}\n            size=\"middle\"\n            danger={true}\n            ghost={true}\n            onClick={() => dispatch(deleteTodo(todo.id))}\n          />\n        </Tooltip>,\n      ]}\n    >{todo.content}</List.Item>\n  )\n}\n\nexport default TodoItem\n","import { useSelector, shallowEqual } from 'react-redux';\nimport { List, Divider } from 'antd';\n\nimport TodoItem from './TodoItem';\n\nconst selectTodoIds = state => {\n  const { todos } = state\n  return todos.todos.map(todo => todo.id)\n}\n\n\n\nconst TodoList = () => {\n  const todoIds = useSelector(selectTodoIds, shallowEqual)\n\n  return (\n    <>\n      <Divider orientation=\"left\">TodoList</Divider>\n      {todoIds && todoIds.length ? (\n        <List\n          size=\"large\"\n          bordered\n          style={{ fontSize: '1rem' }}\n          dataSource={todoIds}\n        >\n          {todoIds.map(todoId => <TodoItem key={`todo-item-${todoId}`} todoId={todoId} />)}\n        </List>\n      ) : <div>No todo yet !</div>}\n\n    </>\n  )\n}\n\n\nexport default TodoList","import { useSelector, useDispatch } from 'react-redux';\nimport { Row, Button } from 'antd';\nimport { SmileOutlined, UnorderedListOutlined, FrownOutlined } from '@ant-design/icons';\n\nimport { setFilter } from '../redux/actions'\nconst TodoFilters = () => {\n  const currentFilter = useSelector(state => state.showFilter)\n  const dispatch = useDispatch()\n  return (\n    <Row style={{ margin: \"30px\" }} justify=\"space-around\">\n      <Button\n        icon={<UnorderedListOutlined />}\n        type=\"primary\"\n        size=\"large\"\n        ghost={currentFilter !== 'all'}\n        onClick={() => dispatch(setFilter('all'))}\n      >All</Button>\n      <Button\n        icon={<SmileOutlined />}\n        type=\"primary\"\n        size=\"large\"\n        ghost={currentFilter !== 'completed'}\n        onClick={() => dispatch(setFilter('completed'))}\n\n      >已完成</Button>\n      <Button\n        icon={<FrownOutlined />}\n        type=\"danger\"\n        size=\"large\"\n        ghost={currentFilter !== 'incompleted'}\n        onClick={() => dispatch(setFilter('incompleted'))}\n      >未完成</Button>\n    </Row>\n  )\n}\n\nexport default TodoFilters\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport 'antd/dist/antd.css'\nimport { Layout, Button } from 'antd';\nimport { ReloadOutlined } from '@ant-design/icons';\nimport AddTodo from './components/AddTodo';\nimport TodoList from './components/TodoList';\nimport TodoFilters from './components/TodoFilters';\nimport { deleteCompletedTodo } from './redux/actions';\n\nconst { Header, Content } = Layout;\n\nfunction TodoApp() {\n  const { todos } = useSelector(state => state.todos)\n  const dispatch = useDispatch()\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      <Header style={{ color: \"#fff\", fontSize: \"20px\" }}>\n        Use React, Redux, and Antd Design build Todo APP\n      </Header>\n      <Content style={{ textAlign: \"center\", padding: \"30px\", margin: \"0 auto\", minWidth: \"70vw\" }}>\n        <AddTodo />\n        <TodoFilters />\n        <TodoList />\n        {todos.length ? (\n          <Button\n            icon={<ReloadOutlined />}\n            type=\"primary\"\n            size=\"large\"\n            ghost\n            style={{ marginTop: \"60px\" }}\n            onClick={() => dispatch(deleteCompletedTodo())}\n          >\n            Clean Completed\n          </Button>\n        ) : ''}\n\n      </Content>\n\n    </Layout>\n  );\n}\n\nexport default TodoApp;\n","import { ADD_TODO, TOGGLE_TODO, DELETE_TODO, DELETE_COMPLETED_TODO } from '../actions/actionTypes'\n\nconst initialState = {\n  todos: []\n}\n\nconst TodosReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TODO: {\n      const { id, content } = action.payload\n      return {\n        todos: [...state.todos,\n        {\n          id,\n          content,\n          completed: false\n        }\n        ],\n      }\n    }\n    case TOGGLE_TODO: {\n      const { id } = action.payload\n      return {\n        todos: state.todos.map(todo => {\n          if (todo.id !== id) {\n            return todo\n          }\n          return {\n            ...todo,\n            completed: !todo.completed\n          }\n        })\n      }\n    }\n    case DELETE_TODO: {\n      const { id } = action.payload\n      return {\n        todos: state.todos.filter(todo => todo.id !== id)\n      }\n    }\n\n    case DELETE_COMPLETED_TODO: {\n      return {\n        todos: state.todos.filter(todo => !todo.completed)\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\nexport default TodosReducer","import { SET_FILTER } from \"../actions/actionTypes\";\n\nconst showFilter = (state = 'all', action) => {\n  switch (action.type) {\n    case SET_FILTER:\n      return action.payload.filter\n    default:\n      return state\n  }\n}\n\nexport default showFilter","import { combineReducers } from \"redux\";\nimport todos from './todos'\nimport showFilter from './showFilter'\n\nexport default combineReducers({\n  todos,\n  showFilter\n})","import { createStore } from 'redux'\nimport rootReducer from './reducers'\n\nexport default createStore(rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoApp from './TodoApp';\n\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <TodoApp />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}